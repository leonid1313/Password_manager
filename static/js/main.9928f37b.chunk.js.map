{"version":3,"sources":["components/Loader/Loader.jsx","components/Header/Header.jsx","components/LoginForm/LoginForm.jsx","components/RegisterForm/RegisterForm.jsx","components/Modals/ModalEdit/ModalEdit.jsx","components/Card/Card.jsx","components/Modals/ModalAdd/ModalAdd.jsx","components/DashboardInfo/DashboardInfo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","Header","LoginForm","useEffect","localStorage","setItem","JSON","stringify","name","password","information","sait","id","items","useState","setName","setPassword","error","setError","arr","i","Object","values","length","parse","push","nameFind","keys","find","element","passwordFind","to","pathname","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","changeName","changePassword","onClick","RegisterForm","email","setEmail","key","changeEmail","ModalEdit","onCancel","setEditPassword","Card","updateList","setModal","modal","setInitialValue","updateLocalStorage","passwordValue","setPasswordValue","passwordStar","setPasswordStar","editPassword","item","console","log","filter","ModalAdd","list","setSait","changeSait","prevList","DashboardInfo","modalAdd","setModalAdd","initialState","getItem","initialValue","parseInitialState","map","App","loader","setLoader","setTimeout","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9928f37b.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.css'\n\nfunction Loader () {\n  return (\n    <div className=\"containerLoader\">\n      Leonid Manuilenko\n    </div>\n  )\n} \n\nexport default Loader;","import React from 'react';\nimport './Header.css'\n\nfunction Header () {\n\n    return (\n      <div className=\"container-header\">\n        <h1 className=\"title-header\">Password manager</h1>\n      </div>\n    )\n}\n\nexport default Header;","import React, {useState, useEffect} from 'react';\nimport './LoginForm.css'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nfunction LoginForm () {\n    useEffect(() => {\n        localStorage.setItem(\"Leonid\", JSON.stringify(\n    {\n      name: \"Leonid\",\n      password: '1313',\n      information: [\n        {name: 'Leonid', password: 'you1313', sait: 'Youtube', id: 1},\n        {name: 'Leonid1', password: 'work1313', sait: 'DOU', id: 2},\n        {name: 'Leonid2', password: 'qwerty1313', sait: 'linkedin', id: 3},\n        {name: 'Leonid3', password: 'maloi1313', sait: 'FavBet', id: 4}]\n    }));\n    });\n\n  const items = {...localStorage};\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('')\n\n  let arr = [];\n  for (let i = 0; i < Object.values(items).length; i++) {\n    let password = (JSON.parse(Object.values(items)[i]));\n    arr.push(password.name, password.password)\n  }\n\n  const nameFind = Object.keys(items).find(function (element) {\n    return element === name;\n  });\n\n  const passwordFind = arr.find(function (element) {\n    return element === password;\n  });\n\n  const changeName = (event) => {\n    setName(event.target.value)\n  }\n\n  const changePassword = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const submitValue = () => {\n    if ((nameFind && passwordFind) !== (name && password)){\n      return setError('There is no user with such data. Check your details, or register.')\n    } else {\n      return (\n        setError('')\n      )\n    }\n  }\n\n  return (\n    <div className=\"container-form-login\">\n      <h1 className=\"title-login\">Login</h1>\n      <div>\n          <Link \n            className=\"link\"\n            to={{\n              pathname: `/register`,\n            }}\n          >\n            Register\n          </Link>\n          <span> / </span>\n          <Link \n            className=\"link\"\n            to={{\n              pathname: `/login`,\n            }}\n          >\n            Login\n          </Link>\n        </div>\n      <form\n        className=\"form-login\"\n        onSubmit={(event) => event.preventDefault()}\n      >\n        <div className=\"container-input\">\n        <p>Enter your name</p>\n        <input \n          type=\"text\"\n          name=\"name\"\n          className=\"text-login\" \n          placeholder=\"Name\"\n          value={name}\n          onChange={event => changeName(event)}\n        />\n        </div>\n        <div className=\"container-input\">\n          <p>Enter password</p>\n          <input\n          type=\"password\"\n          name=\"password\"\n          className=\"password-login\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={event => changePassword(event)}\n        />\n        </div>\n        <div>{error}</div>\n        <button\n          className=\"button-login\"\n          onClick={() => submitValue()}\n        > {((nameFind && passwordFind) !== (name && password))\n            ? 'LogIn'\n            : (<Link \n                className=\"link link-login\"\n                to={{\n                  pathname: `/dashboard`,\n                }}\n              >\n                LogIn\n              </Link>)\n        }\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm;","import React, {useState} from 'react';\nimport './RegisterForm.css'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nfunction RegisterForm () {\n\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('')\n\n  const changeName = (event) => {\n    setName(event.target.value)\n  }\n\n  const changePassword = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const changeEmail = (event) => {\n    setEmail(event.target.value)\n  }\n\n  let key = name;\n  const submitValue = () => {\n    if(key in localStorage){\n      setError('A user with the same name already exists')\n    } else {\n    localStorage.setItem(key, JSON.stringify({name: name, password: password, email: email, information: []}));\n    }\n  }\n\n  return (\n    <div className=\"container-form-registration\">\n      <h1 className=\"title-registration\">registration</h1>\n      <div>\n          <Link \n            className=\"link\"\n            to={{\n              pathname: `/register`,\n            }}\n          >\n            register\n          </Link>\n          <span> / </span>\n          <Link \n            className=\"link\"\n            to={{\n              pathname: `/login`,\n            }}\n          >\n            Login\n          </Link>\n        </div>\n      <form\n        className=\"register-form\"\n        onSubmit={(event) => event.preventDefault()}\n      >\n        <div className=\"container-input\">\n        <p>Enter your name</p>\n        <input \n          type=\"text\"\n          name=\"name\"\n          className=\"text-login\" \n          placeholder=\"Name\"\n          value={name}\n          onChange={event => changeName(event)}\n        />\n        </div>\n        <div className=\"container-input\">\n          <p>Enter your email</p>\n          <input\n          type=\"email\"\n          name=\"email\"\n          className=\"register-email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={event => changeEmail(event)}\n        />\n        </div>\n          <div className=\"container-input\">\n            <p>Enter password</p>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"password-login\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={event => changePassword(event)}\n            />\n          </div>\n          <div>{error}</div>\n        <button\n          className=\"register-button\"\n          onClick={submitValue}\n        >{(key in localStorage)\n            ? 'Register'\n            : (<Link \n              className=\"link\"\n              to={{\n                pathname: `/dashboard`,\n              }}\n            >\n              Register\n            </Link>)\n        }\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default RegisterForm;","import React, {useState} from 'react';\nimport './ModalEdit.css'\n\nconst ModalEdit = ({\n  onCancel,\n  setEditPassword,\n}) => {\n\n  const [name, setName] = useState('');\n\n  const closeModal = () => {\n    onCancel(false)\n  }\n\n  const changePassword = (event) => {\n    setName(event.target.value)\n  }\n  \n  const renamePass = () => {\n    setEditPassword(name)\n    onCancel(false)\n  }\n\n  return (\n    <>\n        <div className=\"card-modal-edit\">\n          <h1 className=\"title-modal-edit\">Edit password</h1>\n          <button\n            onClick={closeModal}\n            className=\"button-close\"\n          >\n            X\n          </button>\n          <form className=\"form-modal-edit\" onSubmit={(event) => event.preventDefault()}>\n            <input\n              placeholder=\"Enter new password\"\n              className=\"input-modal-edit\"\n              type='password'\n              name=\"editPassword\"\n              value={name}\n              onChange={event => changePassword(event)}\n            />\n            <button className=\"button-modal-edit\" onClick={renamePass}>Eddit</button>\n          </form>\n        </div>\n    </>\n  );\n}\n\nexport default ModalEdit;","import React, {useState} from 'react';\nimport './Card.css';\nimport ModalEdit from '../Modals/ModalEdit/ModalEdit';\n\nfunction Card ({\n  arr,\n  name,\n  password,\n  sait,\n  updateList,\n  setModal,\n  modal,\n  id,\n  setInitialValue,\n  updateLocalStorage,\n}) {\n\n  const [passwordValue, setPasswordValue] = useState('hidden')\n  const [passwordStar, setPasswordStar] = useState('block')\n  const [editPassword, setEditPassword] = useState(password)\n\n  const openModal = () => {  \n    setModal(true)  \n    setEditPassword(arr.find(item => item.id === id).password)\n    console.log(editPassword);\n  }\n\n  const handleRemoveItem = () => {\n    updateList(arr.filter(item => item.id !== id));\n    setInitialValue(updateLocalStorage)\n  }\n\n  const revealPassword = () => {\n    setPasswordValue('block')\n    setPasswordStar('hidden')\n  }\n\n  const hidePassword = () => {\n    setPasswordValue('hidden')\n    setPasswordStar('block')\n  }\n\n  return (\n    <div className=\"container-card\">\n      <p className=\"name\"> Name: {name}</p>\n      <p className=\"Password\"> Password: \n        <span className={passwordStar}>********</span> \n        <span className={passwordValue}>{editPassword}</span> \n      </p>\n      <p className=\"Sait\"> Sait: {sait}</p>\n      <div className=\"container-button\">\n        <button className=\"button button-edit\" onClick={openModal}>Edit password</button>\n        <button className=\"button button-delete\" onClick={handleRemoveItem}>delete card</button>\n        <button className=\"button button-reveal\" onClick={revealPassword}>Show password</button>\n        <button className=\"button button-reveal\" onClick={hidePassword}>hide password</button>\n      </div>\n      {modal && \n          <div className=\"container-modal\">\n            <div className=\"card-modal\">\n              <ModalEdit\n                onCancel={setModal}\n                setEditPassword={setEditPassword}\n              />\n            </div>\n          </div>\n        }\n    </div>\n  )\n}\n\nexport default Card;","import React, {useState} from 'react';\nimport './ModalAdd.css'\n\nconst ModalAdd = ({\n  onCancel,\n  list,\n  updateList,\n  setInitialValue,\n  updateLocalStorage,\n}) => {\n  const closeModal = () => {\n    onCancel(false)\n  }\n\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [sait, setSait] = useState('');\n\n  const changeName = (event) => {\n    setName(event.target.value)\n  }\n\n  const changePassword = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const changeSait = (event) => {\n    setSait(event.target.value)\n  }\n\n  const addLine = () => {\n    updateList((prevList) => [...prevList, {'name': name, 'password': password, 'sait': sait, id: list.length + 1}])\n    onCancel(false)\n    setInitialValue(updateLocalStorage)\n  }\n\n  return (\n    <>\n        <div className=\"card\">\n          <button\n            onClick={closeModal}\n            className=\"button-close\"\n          >\n            X\n          </button>\n          <form className=\"modal-add\" onSubmit={(event) => event.preventDefault()}>\n          <div className=\"container-input\">\n            <p>Enter your name</p>\n            <input \n              type=\"text\"\n              name=\"name\"\n              className=\"input-modal-add\" \n              placeholder=\"Name\"\n              value={name}\n              onChange={event => changeName(event)}\n            />\n          </div>\n          <div className=\"container-input\">\n            <p>Enter your password</p>\n            <input \n              type=\"password\"\n              name=\"name\"\n              className=\"input-modal-add\" \n              placeholder=\"Password\"\n              value={password}\n              onChange={event => changePassword(event)}\n            />\n          </div>\n          <div className=\"container-input\">\n            <p>Enter name of sait</p>\n            <input \n              type=\"text\"\n              name=\"name\"\n              className=\"input-modal-add\" \n              placeholder=\"Sait\"\n              value={sait}\n              onChange={event => changeSait(event)}\n            />\n          </div>\n            <button\n              className=\"button-modal-add\"\n              onClick={addLine}\n            >\n              Add\n            </button>\n          </form>\n        </div>\n    </>\n  );\n}\n\nexport default ModalAdd;","import React, {useState, useEffect} from 'react';\nimport './DashboardInfo.css'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Card from '../Card/Card.jsx'\nimport ModalAdd from '../Modals/ModalAdd/ModalAdd';\n\nfunction DashboardInfo () {\n\n  const items = {...localStorage};\n  let arr = [];\n  for (let i = 0; i < Object.values(items).length; i++) {\n    (Object.keys(items)).find(function (element) {\n      if ((element === ((JSON.parse(Object.values(items)[i])).name))) {\n        arr.push(...(JSON.parse(Object.values(items)[i])).information)\n      }  else {\n        arr.push()\n      }\n    });\n  }\n\n  const [modalAdd, setModalAdd] = useState(false)\n  const [modal, setModal] = useState(false)\n  const [list, updateList] = useState(arr);\n\n  const initialState = () =>\n  localStorage.getItem(JSON.parse(Object.values(items)).name || null);\n  const [initialValue, setInitialValue] = useState(initialState);\n  console.log(initialValue);\n  let parseInitialState = JSON.parse(initialState())\n  parseInitialState.information = list\n  let updateLocalStorage = JSON.stringify(parseInitialState)\n\n  console.log(updateLocalStorage);\n\n  const openModal = () => {\n    setModalAdd(true)\n  };\n\n  useEffect(() => {\n    localStorage.setItem(JSON.parse(Object.values(items)).name, updateLocalStorage)\n  }, [updateLocalStorage]);\n\n\n  return (\n    <div className=\"container-dashboard\">\n      <h1 className=\"title-dashboard\">Information</h1>\n      <Link \n        className=\"link\"\n        to={{\n          pathname: `/login`,\n        }}\n      >\n        Log out\n      </Link>\n      <div>\n      { list.map(item => (\n            <div className=\"container-info\">\n              <Card\n                key={item.name}\n                name={item.name}\n                password={item.password}\n                sait={item.sait}\n                arr={list}\n                setModal={setModal}\n                modal={modal}\n                updateList={updateList}\n                id={item.id}\n                setInitialValue={ setInitialValue}\n                updateLocalStorage={updateLocalStorage}\n              />\n            </div>\n          ))\n      }\n      </div>\n      <button \n        className=\"add\"\n        onClick={openModal}\n      >\n        Add new card\n      </button>\n      {modalAdd && \n          <div className=\"container-modal\">\n            <div className=\"card-modal\">\n              <ModalAdd\n                onCancel={setModalAdd}\n                list={list}\n                updateList={updateList}\n                setInitialValue={setInitialValue}\n                updateLocalStorage={updateLocalStorage}\n              />\n            </div>\n          </div>\n        }\n    </div>\n  )\n}\n\nexport default DashboardInfo;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Loader from './components/Loader/Loader.jsx';\nimport Header from './components/Header/Header.jsx';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport RegisterForm from './components/RegisterForm/RegisterForm';\nimport DashboardInfo from './components/DashboardInfo/DashboardInfo';\n\nfunction App() {\n\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(false);\n    setTimeout(() => {\n      setLoader(true)\n    }, 1000)\n  }, []);\n\n  return (\n    <>\n      {loader \n        ? (\n          <>\n            <Router basename=\"/password_manager\">\n              <Header />\n              <Route path=\"/dashboard\">\n                <DashboardInfo/>\n              </Route>\n              <Route path=\"/register\">\n                <RegisterForm />\n              </Route>\n              <Route path=\"/login\">\n                <LoginForm />\n              </Route>\n              <Route path=\"/\" exact component={LoginForm}/>\n            </Router>\n          </>\n          )\n        :  <Loader/>\n      }\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}